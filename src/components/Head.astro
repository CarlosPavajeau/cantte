---
import '@fontsource/geist-sans'
import '@styles/global.css'
import { ViewTransitions } from 'astro:transitions'

interface Props {
  title: string
  description?: string
}

const canonicalUrl = new URL(Astro.url.pathname, Astro.site)

const { title, description } = Astro.props
---

<!-- Global Metadata -->
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<link rel="icon" type="image/svg+xml" href="/favicon.svg"
      media="(prefers-color-scheme: dark)">
<link rel="icon" type="image/svg+xml" href="/favicon.svg"
      media="(prefers-color-scheme: light)">
<link rel="icon" type="image/x-icon" href="/favicon.svg">
<meta name="generator" content={Astro.generator}/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalUrl}/>

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title}/>
<meta name="description" content={description}/>
<meta name="favicon" content="/favicon.ico"/>

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website"/>
<meta property="og:url" content={Astro.url}/>
<meta property="og:title" content={title}/>
<meta property="og:description" content={description}/>

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image"/>
<meta property="twitter:url" content={Astro.url}/>
<meta property="twitter:title" content={title}/>
<meta property="twitter:description" content={description}/>

<ViewTransitions/>

<script>
  import AOS from 'aos';
  import 'aos/dist/aos.css';

  // Initialize AOS
  AOS.init({
    duration: 800,
    once: true,
  });

  // Handle dark mode
  if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    document.documentElement.classList.add('dark')
  } else {
    document.documentElement.classList.remove('dark')
  }
</script>
